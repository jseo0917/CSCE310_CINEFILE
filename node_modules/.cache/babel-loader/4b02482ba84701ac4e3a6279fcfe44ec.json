{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client'; //import MovieComponent from './components/MovieComponent';\n\nimport axios from \"axios\";\nimport useFetch from \"react-fetch-hook\";\nlibrary.add(fab); //const [data3, setData3] = useState([]);\n\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nfetch(`http://localhost:8080/movies/${id}/actors`).then(resp => resp.json()).then(data => data.map(item => {\n  //return (<span>{item}</span>)\n  //console.log(item.id)\n  settmp2(item);\n}));\nvar details = [];\nvar get_genre = [];\n\nfunction App() {\n  let [movieList, setMovieList] = useState(null);\n  let [nowPlaying, setNowPlaying] = useState(false);\n  let [nowRated, setNowRated] = useState(false);\n  let [nowKeyword, setNowKeyword] = useState(false);\n  let [page, setPage] = useState(1);\n  let [keyword, setKeyword] = useState('');\n  let [genre, setGenre] = useState(null);\n  let [modalOpen, setOpen] = useState(false);\n  let [movieId, setMovieId] = useState(null);\n  let [videoId, setVideo] = useState(null);\n  let [rating, setRating] = useState(1);\n  let [currentList, setCurrent] = useState(null);\n  let [reviews, setReview] = useState(null);\n  let [getCredits, setCredits] = useState(null);\n  let [release_dates, setRelease] = useState(null);\n  let [actors, setactors] = useState('');\n  let searchContent = '';\n  let [tmp2, settmp2] = useState([]);\n\n  const getGenre = async () => {\n    let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n    let data = await fetch(url);\n    let result = await data.json(); //console.log(\"Genres\", result);\n\n    setGenre(result.genres);\n    getNowPlaying();\n  };\n\n  const getNowPlaying = async () => {\n    let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch(url);\n    let result = await data.json();\n    console.log(\"Movie\", result);\n    setMovieList([...result.results]);\n    setCurrent([...result.results]);\n    setNowPlaying(true);\n    setNowKeyword(false);\n    setNowRated(false);\n  };\n\n  const getKeyword = async keyword => {\n    let url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=1&include_adult=false`;\n    let data = await fetch(url);\n    let result = await data.json();\n    setMovieList([...result.results]);\n    document.getElementById(\"keyword\").value = null;\n    setNowPlaying(false);\n    setNowKeyword(true);\n    setNowRated(false);\n    setKeyword(keyword);\n    setCurrent([...result.results]);\n  };\n\n  function sortMovieRating(x) {\n    if (!(movieList === null)) {\n      movieList.sort(function (a, b) {\n        let i = a.vote_average;\n        let j = b.vote_average;\n        console.log(i, j);\n        return (i - j) * x;\n      });\n      setMovieList([...movieList]); //console.log(\"Sorted\", movieList)\n    }\n  }\n\n  function sortMoviePopular(x) {\n    if (!(movieList === null)) {\n      movieList.sort(function (a, b) {\n        let i = a.popularity;\n        let j = b.popularity;\n        console.log(i, j);\n        return (i - j) * x;\n      });\n      setMovieList([...movieList]); //console.log(\"Sorted\", movieList)\n    }\n  }\n\n  function filterMovieRating(x) {\n    console.log(rating);\n    console.log(currentList);\n\n    if (currentList.length > 0) {\n      movieList = currentList;\n      let temp = movieList.filter(item => {\n        let y = item.vote_average >= x;\n        console.log(y);\n        return y;\n      });\n      setMovieList(temp);\n    }\n  }\n\n  const getTopRated = async () => {\n    let url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch(url);\n    let result = await data.json();\n    setMovieList([...result.results]); //console.log(\"Movie\", result.results);\n\n    setNowPlaying(false);\n    setNowKeyword(false);\n    setNowRated(true);\n    setCurrent([...result.results]);\n  };\n\n  let getSeeMore = async page => {\n    //console.log(page);\n    if (page === 0) return;\n    let url;\n\n    if (nowPlaying) {\n      url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${page}`;\n    } else if (nowKeyword) {\n      url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=${page}&include_adult=false`;\n    } else if (nowRated) {\n      url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${page}`;\n    }\n\n    try {\n      let data = await fetch(url);\n      let result = await data.json();\n      setMovieList([...result.results]);\n      setPage(page);\n      console.log(`Now Playing ${nowPlaying}, Now Rated ${nowRated}, Now Keyword ${nowKeyword}`);\n      console.log(url);\n      setCurrent([...result.results]);\n    } catch (error) {\n      alert(\"Not found!\");\n    }\n  };\n\n  let sortMovieGenre = currentGenre => {\n    try {\n      let temp = movieList.filter(movie => {\n        let x = movie.genre_ids.includes(currentGenre);\n        console.log(x);\n        return x;\n      });\n      if (temp.length === 0) return;\n      setMovieList(temp);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  let closeModal = () => {\n    setOpen(false);\n  };\n\n  let openModal = id => {\n    setOpen(true);\n    setMovieId(id);\n  }; // const {data2} = useFetch(`http//localhost:8080/genres`);\n  // console.log(data2);\n  // var data2;\n  // const fetchData = () => {\n  //     return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data)).then(data2=>setData(data2));\n  // }\n  // Console.log(data2);\n\n\n  let getMovieInfo = async id => {\n    // const fetchData = () => {\n    //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n    // }\n    // fetch(`http://localhost:8080/movies/${id}/actors`)\n    // .then(resp => resp.json())\n    // .then(data => data.map((item)=> {            \n    //       //return (<span>{item}</span>)\n    //       //console.log(item.id)\n    //       settmp2(item);\n    // }));\n    console.log(tmp2);\n    let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n    let data = await fetch(url);\n    let result = await data.json();\n    setReview(result.results);\n    url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n    data = await fetch(url);\n    result = await data.json(); //setVideo(result.title);\n    //console.log(result.title);\n    //580489\n\n    console.log(id);\n    let result_ = new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n      request.open(\"GET\", `http//localhost:8080/genres`);\n\n      request.onreadystatechange = () => {\n        let raw = request.responseText;\n        let objectified = JSON.parse(raw);\n        resolve(objectified);\n        console.log(resolve(objectified));\n      };\n\n      request.send();\n    });\n    var temp_actors = []; // fetch(`http://localhost:8080/movies/${id}/actors`)\n    //   .then(resp => resp.json())\n    //   .then(data => console.log(data));\n\n    setactors(`http://localhost:8080/movies/${id}/actors`); //console.log(temp_actors);\n    //  const fetchData = () => {\n    //     return fetch(`http//localhost:8080/genres`).then((res) => res.json())  \n    //     .then((json) => console.log(json));\n    //  }\n    // const fetchData = () => {\n    //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n    // }\n    //console.log(fetchData);\n\n    details = details.concat(result.title);\n    details = details.concat(result.runtime);\n    details = details.concat(result.original_language);\n    details = details.concat(result.overview);\n    details = details.concat(result.release_date);\n    details = details.concat(result.poster_path);\n    details = details.concat(result.vote_average);\n    get_genre = get_genre.concat(result.genres);\n    console.log(get_genre);\n    url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n    data = await fetch(url);\n    result = await data.json();\n    setCredits(result.cast);\n  };\n\n  useEffect(() => {\n    getGenre();\n  }, []);\n\n  if (movieList === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar-color\",\n    variant: \"dark\",\n    expand: \"lg\",\n    sticky: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, \"CineFile\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"#toprated\",\n    onClick: () => getTopRated(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, \"Top Rated\"), /*#__PURE__*/React.createElement(NavDropdown, {\n    title: \"Genres\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, genre.map(item => {\n    return /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      key: item.id,\n      onClick: () => sortMovieGenre(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"keyword\",\n    onChange: field => {\n      searchContent = field.target.value;\n    },\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    onClick: () => getKeyword(searchContent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputRange, {\n    draggableTrack: true,\n    step: 1,\n    maxValue: 10,\n    minValue: 1,\n    value: rating,\n    onChange: value => setRating(value),\n    onChangeComplete: () => filterMovieRating(rating),\n    className: \"input-range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    movieList: movieList,\n    genreList: genre,\n    Modal: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ReactModal, {\n    isOpen: modalOpen,\n    ariaHideApp: false,\n    onAfterOpen: () => getMovieInfo(movieId),\n    closeTimeoutMS: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayTrailer, {\n    close: closeModal,\n    details: details,\n    review: reviews,\n    credits: getCredits,\n    genre: get_genre,\n    actor: actors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Container, {\n    className: \"seemore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    className: \"m-3 mb-5\",\n    onClick: () => getSeeMore(page - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    className: \"m-3 mb-5\",\n    onClick: () => getSeeMore(page + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/App.js"],"names":["React","useEffect","useState","library","fab","MovieList","PlayTrailer","ReactModal","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","InputRange","Client","axios","useFetch","add","apiKey","fetch","id","then","resp","json","data","map","item","settmp2","details","get_genre","App","movieList","setMovieList","nowPlaying","setNowPlaying","nowRated","setNowRated","nowKeyword","setNowKeyword","page","setPage","keyword","setKeyword","genre","setGenre","modalOpen","setOpen","movieId","setMovieId","videoId","setVideo","rating","setRating","currentList","setCurrent","reviews","setReview","getCredits","setCredits","release_dates","setRelease","actors","setactors","searchContent","tmp2","getGenre","url","result","genres","getNowPlaying","console","log","results","getKeyword","document","getElementById","value","sortMovieRating","x","sort","a","b","i","vote_average","j","sortMoviePopular","popularity","filterMovieRating","length","temp","filter","y","getTopRated","getSeeMore","error","alert","sortMovieGenre","currentGenre","movie","genre_ids","includes","closeModal","openModal","getMovieInfo","result_","Promise","resolve","reject","request","XMLHttpRequest","open","onreadystatechange","raw","responseText","objectified","JSON","parse","send","temp_actors","concat","title","runtime","original_language","overview","release_date","poster_path","cast","name","field","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client';\n//import MovieComponent from './components/MovieComponent';\nimport axios from \"axios\"\nimport useFetch from \"react-fetch-hook\"\n      \nlibrary.add(fab);\n//const [data3, setData3] = useState([]);\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nfetch(`http://localhost:8080/movies/${id}/actors`)\n      .then(resp => resp.json())\n      .then(data => data.map((item)=> {            \n            //return (<span>{item}</span>)\n            //console.log(item.id)\n            settmp2(item);\n      }));\nvar details = [];\nvar get_genre = [];\nfunction App() {\n  \n  let [movieList, setMovieList] = useState(null);\n  let [nowPlaying, setNowPlaying] = useState(false);\n  let [nowRated, setNowRated] = useState(false);\n  let [nowKeyword, setNowKeyword] = useState(false);\n  let [page, setPage] = useState(1);\n  let [keyword, setKeyword] = useState('');\n  let [genre, setGenre] = useState(null);\n  let [modalOpen, setOpen] = useState(false);\n  let [movieId, setMovieId] = useState(null);\n  let [videoId, setVideo] = useState(null);\n  let [rating, setRating] = useState(1);\n  let [currentList, setCurrent] = useState(null);\n  let [reviews, setReview] = useState(null);\n  let [getCredits, setCredits] = useState(null);\n  let [release_dates, setRelease] = useState(null);\n  let [actors, setactors] = useState('');\n  let searchContent = '';\n  let [tmp2, settmp2] = useState([]);\n\n  const getGenre = async() => {\n    let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n    let data = await fetch (url);\n    let result = await data.json();\n    //console.log(\"Genres\", result);\n    setGenre(result.genres);\n    getNowPlaying();\n  }\n  const getNowPlaying = async() => {\n    let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch (url);\n    let result = await data.json();\n    console.log(\"Movie\", result);\n    setMovieList([...result.results]);\n    setCurrent([...result.results]);\n    setNowPlaying(true);\n    setNowKeyword(false);\n    setNowRated(false);\n  }\n  const getKeyword = async(keyword) => {\n    let url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=1&include_adult=false`;\n    let data = await fetch (url);\n    let result = await data.json();\n    setMovieList([...result.results]);\n    document.getElementById(\"keyword\").value = null;\n    setNowPlaying(false);\n    setNowKeyword(true);\n    setNowRated(false);\n    setKeyword(keyword);\n    setCurrent([...result.results]);\n  }\n\n  function sortMovieRating(x) {\n    if (!(movieList === null)) {\n      movieList.sort(function(a, b) {\n        let i = a.vote_average;\n        let j = b.vote_average;\n        console.log(i,j);\n        return (i-j)*x;\n      })\n      setMovieList([...movieList]);\n      //console.log(\"Sorted\", movieList)\n    }\n  }\n\n  function sortMoviePopular(x) {\n    if (!(movieList === null)) {\n      movieList.sort(function(a, b) {\n        let i = a.popularity;\n        let j = b.popularity;\n        console.log(i,j);\n        return (i-j)*x;\n      })\n      setMovieList([...movieList]);\n      //console.log(\"Sorted\", movieList)\n    }\n  }\n\n  function filterMovieRating(x) {\n    console.log(rating);\n    console.log(currentList);\n    if (currentList.length>0) {\n      movieList = currentList;\n      let temp = movieList.filter((item) => {\n        let y = (item.vote_average>=x);\n        console.log(y);\n        return (y);\n      })\n      setMovieList(temp);\n    }\n  }\n\n  const getTopRated = async() => {\n    let url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch (url);\n    let result = await data.json();\n    setMovieList([...result.results]);\n    //console.log(\"Movie\", result.results);\n    setNowPlaying(false);\n    setNowKeyword(false);\n    setNowRated(true);\n    setCurrent([...result.results]);\n  }\n\n  let getSeeMore = async(page) => {\n    //console.log(page);\n    if (page === 0) return;\n    let url;\n    if (nowPlaying) {\n      url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${page}`;\n    } \n    else if (nowKeyword) {\n      url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=${page}&include_adult=false`;\n    }\n    else if (nowRated) {\n      url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${page}`;\n    }\n    try {\n      let data = await fetch (url);\n      let result = await data.json();\n      setMovieList([...result.results]);\n      setPage(page);\n      console.log(`Now Playing ${nowPlaying}, Now Rated ${nowRated}, Now Keyword ${nowKeyword}`)\n      console.log(url);\n      setCurrent([...result.results]);\n    } catch (error) {\n      alert(\"Not found!\")\n    }\n  }\n\n  let sortMovieGenre = (currentGenre) => {\n    try {\n      let temp = movieList.filter((movie) => {\n        let x = movie.genre_ids.includes(currentGenre);\n        console.log(x);\n      return x;\n      })\n      if (temp.length === 0) return;\n      setMovieList(temp);\n    } catch (error) {\n      alert(error);\n    }\n    \n  }\n\n  let closeModal = () => {\n    setOpen(false);\n  }\n\n  let openModal = (id) => {\n    setOpen(true);\n    setMovieId(id);\n  }\n  \n  // const {data2} = useFetch(`http//localhost:8080/genres`);\n  // console.log(data2);\n  // var data2;\n  // const fetchData = () => {\n  //     return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data)).then(data2=>setData(data2));\n  // }\n  // Console.log(data2);\n\n\n  let getMovieInfo = async(id) => {\n    // const fetchData = () => {\n    //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n    // }\n      // fetch(`http://localhost:8080/movies/${id}/actors`)\n      // .then(resp => resp.json())\n      // .then(data => data.map((item)=> {            \n      //       //return (<span>{item}</span>)\n      //       //console.log(item.id)\n      //       settmp2(item);\n      // }));\n    \n    console.log(tmp2);\n\n    let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n    let data = await fetch (url);\n    let result = await data.json();\n    setReview(result.results);\n    \n    url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n    data = await fetch (url);\n    result = await data.json();\n    //setVideo(result.title);\n    //console.log(result.title);\n    //580489\n    console.log(id);\n    let result_ = new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n        request.open(\"GET\", `http//localhost:8080/genres`);\n        request.onreadystatechange = () => {\n          let raw = request.responseText;          \n          let objectified = JSON.parse(raw);\n          resolve(objectified);\n          console.log(resolve(objectified));\n      }\n      \n      request.send();\n    })\n\n    var temp_actors = [];\n    // fetch(`http://localhost:8080/movies/${id}/actors`)\n    //   .then(resp => resp.json())\n    //   .then(data => console.log(data));\n    setactors(`http://localhost:8080/movies/${id}/actors`)\n    //console.log(temp_actors);\n  //  const fetchData = () => {\n  //     return fetch(`http//localhost:8080/genres`).then((res) => res.json())  \n  //     .then((json) => console.log(json));\n  //  }\n\n    // const fetchData = () => {\n    //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n    // }\n    \n    //console.log(fetchData);\n\n    details = details.concat(result.title);\n    details = details.concat(result.runtime);\n    details = details.concat(result.original_language);\n    details = details.concat(result.overview);\n    details = details.concat(result.release_date);\n    details = details.concat(result.poster_path);\n    details = details.concat(result.vote_average);\n    get_genre = get_genre.concat(result.genres);\n    console.log(get_genre);\n    url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n    data = await fetch (url);\n    result = await data.json();\n    setCredits(result.cast);\n    \n  }\n\n  useEffect(() => {\n    getGenre();\n  }, [])\n  if (movieList === null) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n  return (\n    \n    <div>\n\n      {/* TOP NAVIGATION BAR */}\n      <Navbar className=\"navbar-color\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"#home\">CineFile</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">     \n\n            <Nav.Link href=\"#toprated\" onClick={() => getTopRated()}>Top Rated</Nav.Link>    \n\n            <NavDropdown title=\"Genres\" id=\"basic-nav-dropdown\">\n              {genre.map((item) => {\n                return(\n                <NavDropdown.Item key={item.id} onClick={() => sortMovieGenre(item.id)}>{item.name}</NavDropdown.Item>\n                );\n              })}\n            </NavDropdown>\n          \n          </Nav>\n\n          <Form inline>\n            <FormControl id=\"keyword\" onChange={field => {searchContent = field.target.value;}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"dark\" onClick={() => getKeyword(searchContent)}>Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar> \n\n      <form className=\"form\">\n        <InputRange\n          draggableTrack\n          step={1}\n          maxValue={10}\n          minValue={1}\n          value={rating}\n          onChange={value => setRating(value)}\n          onChangeComplete={() => filterMovieRating(rating)} className=\"input-range\"/>\n      </form>\n\n      <Container>\n        <MovieList movieList = {movieList} genreList = {genre} Modal={openModal}/>\n        <ReactModal isOpen={modalOpen} ariaHideApp={false} onAfterOpen={() => getMovieInfo(movieId)} closeTimeoutMS={1000}>\n          <PlayTrailer close={closeModal} details={details} review={reviews} credits={getCredits} genre = {get_genre} actor = {actors}></PlayTrailer>\n        </ReactModal>\n      </Container>\n      \n      <Container className=\"seemore\">\n        <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page-1)}>Previous</Button>\n        <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page+1)}>Next</Button>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}