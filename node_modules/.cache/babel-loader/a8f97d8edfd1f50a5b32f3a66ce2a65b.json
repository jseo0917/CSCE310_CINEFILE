{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client'; //import MovieComponent from './components/MovieComponent';\n\nimport axios from \"axios\";\nimport useFetch from \"react-fetch-hook\";\nlibrary.add(fab); //const [data3, setData3] = useState([]);\n\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nvar details = [];\nvar get_genre = [];\n\nfunction App() {\n  let [movieList, setMovieList] = useState(null);\n  let [nowPlaying, setNowPlaying] = useState(false);\n  let [nowRated, setNowRated] = useState(false);\n  let [nowKeyword, setNowKeyword] = useState(false);\n  let [page, setPage] = useState(1);\n  let [keyword, setKeyword] = useState('');\n  let [genre, setGenre] = useState(null);\n  let [modalOpen, setOpen] = useState(false);\n  let [movieId, setMovieId] = useState(null);\n  let [videoId, setVideo] = useState(null);\n  let [rating, setRating] = useState(1);\n  let [currentList, setCurrent] = useState(null);\n  let [reviews, setReview] = useState(null);\n  let [getCredits, setCredits] = useState(null);\n  let [release_dates, setRelease] = useState(null);\n  let [startSearch, setStartSearch] = useState(0);\n  let [actors, setactors] = useState([]);\n  let [SearchResult, setSearchResult] = useState([]);\n  var tmp4 = [];\n  let searchContent = '';\n  let [tmp2, settmp2] = useState([]);\n  let [tmp3, settmp3] = useState([]);\n\n  const getGenre = async () => {\n    let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`; //let url = `http://localhost:8080/genres`;\n\n    let local_url = `http://localhost:8080/genres`;\n    let data = await fetch(url);\n    let result = await data.json(); // let url = `http://localhost:8080/genres`;\n    // console.log(\"Genres\", result.genres);\n    //setGenre(result.genres);\n\n    setGenre(url);\n    fetch(local_url).then(resp => resp.json()).then(data => data.map(item => {\n      //console.log(item.id);\n      //settmp2(item);    \n      tmp2 = item;\n      tmp3 = tmp3.concat(tmp2);\n      console.log(tmp3);\n      setGenre(tmp3);\n    }));\n    getNowPlaying();\n  };\n\n  const getNowPlaying = async () => {\n    let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch(url);\n    let result = await data.json();\n    console.log(\"Movie\", result);\n    setMovieList([...result.results]);\n    setCurrent([...result.results]);\n    setNowPlaying(true);\n    setNowKeyword(false);\n    setNowRated(false);\n  };\n\n  const getKeyword = async keyword => {\n    console.log(keyword);\n    var tmp3 = [];\n    setStartSearch(1);\n    fetch(`http://localhost:8080/movies/searchByTitle/${keyword}`).then(resp => resp.json()).then(data => data.map(item => {\n      tmp3 = tmp3.concat(item);\n      console.log(tmp3);\n      setSearchResult(tmp3);\n    }));\n    fetch(`http://localhost:8080/movies/searchByTitle/${keyword}`).then(resp => resp.json()).then(data => setMovieList(data));\n    document.getElementById(\"keyword\").value = null;\n    setNowPlaying(false);\n    setNowKeyword(true);\n    setNowRated(false);\n    setKeyword(keyword);\n  };\n\n  function filterMovieRating(x) {\n    console.log(rating);\n    console.log(currentList);\n\n    if (currentList.length > 0) {\n      movieList = currentList;\n      let temp = movieList.filter(item => {\n        let y = item.vote_average >= x;\n        console.log(y);\n        return y;\n      });\n      setMovieList(temp);\n    }\n  }\n\n  const getTopRated = async () => {\n    let local_url = `http://localhost:8080/movies/topRated/maxResults/12`;\n    fetch(local_url).then(resp => resp.json()).then(data => setMovieList(data)); //setMovieList([...result.results]);\n    // console.log(\"Movie\", result.results);\n\n    setNowPlaying(false);\n    setNowKeyword(false);\n    setNowRated(true); //setCurrent([...result.results]);\n  };\n\n  let sortMovieGenre = currentGenre => {\n    try {\n      let temp = movieList.filter(movie => {\n        let x = movie.genre_ids.includes(currentGenre);\n        console.log(x);\n        return x;\n      });\n      if (temp.length === 0) return;\n      setMovieList(temp);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  let closeModal = () => {\n    setOpen(false);\n  };\n\n  let openModal = id => {\n    setOpen(true);\n    setMovieId(id);\n  };\n\n  let getMovieInfo = async id => {\n    var tmp3 = [];\n    fetch(`http://localhost:8080/movies/${id}/actors`).then(resp => resp.json()).then(data => data.map(item => {\n      //console.log(item.id);\n      //settmp2(item);    \n      tmp2 = item; //console.log(tmp2);         \n\n      tmp3 = tmp3.concat(tmp2);\n      setactors(tmp3);\n    }));\n    let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n    let data = await fetch(url);\n    let result = await data.json();\n    setReview(result.results);\n    url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n    data = await fetch(url);\n    result = await data.json(); //setVideo(result.title);\n    //console.log(result.title);\n    //580489\n\n    console.log(id);\n    let result_ = new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n      request.open(\"GET\", `http//localhost:8080/genres`);\n\n      request.onreadystatechange = () => {\n        let raw = request.responseText;\n        let objectified = JSON.parse(raw);\n        resolve(objectified);\n        console.log(resolve(objectified));\n      };\n\n      request.send();\n    });\n    details = details.concat(result.title);\n    details = details.concat(result.runtime);\n    details = details.concat(result.original_language);\n    details = details.concat(result.overview);\n    details = details.concat(result.release_date);\n    details = details.concat(result.poster_path);\n    details = details.concat(result.vote_average);\n    get_genre = get_genre.concat(result.genres);\n    console.log(get_genre);\n    url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n    data = await fetch(url);\n    result = await data.json();\n    setCredits(result.cast);\n  };\n\n  useEffect(() => {\n    getGenre();\n  }, []);\n\n  if (movieList === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar-color\",\n    variant: \"dark\",\n    expand: \"lg\",\n    sticky: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"CineFile\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"#toprated\",\n    onClick: () => getTopRated(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Top Rated\"), /*#__PURE__*/React.createElement(NavDropdown, {\n    title: \"Genres\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, genre.map(item => {\n    return /*#__PURE__*/React.createElement(NavDropdown.Item, {\n      key: item.id,\n      onClick: () => sortMovieGenre(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"keyword\",\n    onChange: field => {\n      searchContent = field.target.value;\n    },\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    onClick: () => getKeyword(searchContent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputRange, {\n    draggableTrack: true,\n    step: 1,\n    maxValue: 10,\n    minValue: 1,\n    value: rating,\n    onChange: value => setRating(value),\n    onChangeComplete: () => filterMovieRating(rating),\n    className: \"input-range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    movieList: movieList,\n    genreList: genre,\n    Search: startSearch,\n    Modal: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ReactModal, {\n    isOpen: modalOpen,\n    ariaHideApp: false,\n    onAfterOpen: () => getMovieInfo(movieId),\n    closeTimeoutMS: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayTrailer, {\n    close: closeModal,\n    details: details,\n    review: reviews,\n    credits: getCredits,\n    genre: get_genre,\n    actor: actors,\n    SearchResults: SearchResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/App.js"],"names":["React","useEffect","useState","library","fab","MovieList","PlayTrailer","ReactModal","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","InputRange","Client","axios","useFetch","add","apiKey","details","get_genre","App","movieList","setMovieList","nowPlaying","setNowPlaying","nowRated","setNowRated","nowKeyword","setNowKeyword","page","setPage","keyword","setKeyword","genre","setGenre","modalOpen","setOpen","movieId","setMovieId","videoId","setVideo","rating","setRating","currentList","setCurrent","reviews","setReview","getCredits","setCredits","release_dates","setRelease","startSearch","setStartSearch","actors","setactors","SearchResult","setSearchResult","tmp4","searchContent","tmp2","settmp2","tmp3","settmp3","getGenre","url","local_url","data","fetch","result","json","then","resp","map","item","concat","console","log","getNowPlaying","results","getKeyword","document","getElementById","value","filterMovieRating","x","length","temp","filter","y","vote_average","getTopRated","sortMovieGenre","currentGenre","movie","genre_ids","includes","error","alert","closeModal","openModal","id","getMovieInfo","result_","Promise","resolve","reject","request","XMLHttpRequest","open","onreadystatechange","raw","responseText","objectified","JSON","parse","send","title","runtime","original_language","overview","release_date","poster_path","genres","cast","name","field","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client';\n//import MovieComponent from './components/MovieComponent';\nimport axios from \"axios\"\nimport useFetch from \"react-fetch-hook\"\n      \nlibrary.add(fab);\n//const [data3, setData3] = useState([]);\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nvar details = [];\nvar get_genre = [];\nfunction App() {\n  \n  let [movieList, setMovieList] = useState(null);\n  let [nowPlaying, setNowPlaying] = useState(false);\n  let [nowRated, setNowRated] = useState(false);\n  let [nowKeyword, setNowKeyword] = useState(false);\n  let [page, setPage] = useState(1);\n  let [keyword, setKeyword] = useState('');\n  let [genre, setGenre] = useState(null);\n  let [modalOpen, setOpen] = useState(false);\n  let [movieId, setMovieId] = useState(null);\n  let [videoId, setVideo] = useState(null);\n  let [rating, setRating] = useState(1);\n  let [currentList, setCurrent] = useState(null);\n  let [reviews, setReview] = useState(null);\n  let [getCredits, setCredits] = useState(null);\n  let [release_dates, setRelease] = useState(null);\n  let [startSearch, setStartSearch] = useState(0);\n\n  let [actors, setactors] = useState([]);\n  let [SearchResult, setSearchResult] = useState([]);\n\n  var tmp4 = [];\n  let searchContent = '';\n  let [tmp2, settmp2] = useState([]);\n  let [tmp3, settmp3] = useState([]);\n  const getGenre = async() => {\n    let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n    //let url = `http://localhost:8080/genres`;\n    let local_url = `http://localhost:8080/genres`;\n    let data = await fetch (url);\n    let result = await data.json();\n    // let url = `http://localhost:8080/genres`;\n    // console.log(\"Genres\", result.genres);\n    //setGenre(result.genres);\n    setGenre(url);\n    fetch(local_url)\n    .then(resp => resp.json())\n    .then(data => data.map((item)=> {            \n      //console.log(item.id);\n      //settmp2(item);    \n      tmp2 = item;\n      \n      tmp3 = tmp3.concat(tmp2);\n      console.log(tmp3);         \n      setGenre(tmp3); \n      \n}));\n    getNowPlaying();\n  }\n  \n  const getNowPlaying = async() => {\n    let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n    let data = await fetch (url);\n    let result = await data.json();\n    console.log(\"Movie\", result);\n    setMovieList([...result.results]);\n    setCurrent([...result.results]);\n    setNowPlaying(true);\n    setNowKeyword(false);\n    setNowRated(false);\n  }\n  const getKeyword = async(keyword) => {\n    console.log(keyword);\n    var tmp3 = [];\n    setStartSearch(1);\n\n    fetch(`http://localhost:8080/movies/searchByTitle/${keyword}`)\n    .then(resp => resp.json())\n    .then(data =>              \n      data.map((item)=>{         \n      tmp3 = tmp3.concat(item);\n      console.log(tmp3);    \n      setSearchResult(tmp3)})            \n  );\n\n    fetch(`http://localhost:8080/movies/searchByTitle/${keyword}`)\n      .then(resp => resp.json())\n      .then(data =>         \n        setMovieList(data)        \n    );\n\n    document.getElementById(\"keyword\").value = null;\n    setNowPlaying(false);\n    setNowKeyword(true);\n    setNowRated(false);\n    setKeyword(keyword);\n  }\n\n\n  function filterMovieRating(x) {\n    console.log(rating);\n    console.log(currentList); \n    if (currentList.length>0) {\n      movieList = currentList;\n      let temp = movieList.filter((item) => {\n        let y = (item.vote_average>=x);\n        console.log(y);\n        return (y);\n      })\n      setMovieList(temp);\n    }\n  }\n\n  const getTopRated = async() => {\n    let local_url = `http://localhost:8080/movies/topRated/maxResults/12`;\n    fetch(local_url)\n    .then(resp => resp.json())\n    .then(data => setMovieList(data)             \n    );\n    //setMovieList([...result.results]);\n    // console.log(\"Movie\", result.results);\n    setNowPlaying(false);\n    setNowKeyword(false);\n    setNowRated(true);\n    //setCurrent([...result.results]);\n  }\n\n  let sortMovieGenre = (currentGenre) => {\n    try {\n      let temp = movieList.filter((movie) => {\n        let x = movie.genre_ids.includes(currentGenre);\n        console.log(x);\n      return x;\n      })\n      if (temp.length === 0) return;\n      setMovieList(temp);\n    } catch (error) {\n      alert(error);\n    }\n    \n  }\n\n  let closeModal = () => {\n    setOpen(false);\n  }\n\n  let openModal = (id) => {\n    setOpen(true);\n    setMovieId(id);\n  }\n  \n  let getMovieInfo = async(id) => {\n  \n    var tmp3 = [];\n    fetch(`http://localhost:8080/movies/${id}/actors`)\n      .then(resp => resp.json())\n      .then(data => data.map((item)=> {            \n            //console.log(item.id);\n            //settmp2(item);    \n            tmp2 = item;\n            //console.log(tmp2);         \n            tmp3 = tmp3.concat(tmp2);\n            setactors(tmp3); \n            \n    }));\n\n    let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n    let data = await fetch (url);\n    let result = await data.json();\n    setReview(result.results);\n    \n    url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n    data = await fetch (url);\n    result = await data.json();\n    //setVideo(result.title);\n    //console.log(result.title);\n    //580489\n    console.log(id);\n    let result_ = new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n        request.open(\"GET\", `http//localhost:8080/genres`);\n        request.onreadystatechange = () => {\n          let raw = request.responseText;          \n          let objectified = JSON.parse(raw);\n          resolve(objectified);\n          console.log(resolve(objectified));\n      }\n      \n      request.send();\n    })\n    details = details.concat(result.title);\n    details = details.concat(result.runtime);\n    details = details.concat(result.original_language);\n    details = details.concat(result.overview);\n    details = details.concat(result.release_date);\n    details = details.concat(result.poster_path);\n    details = details.concat(result.vote_average);\n    get_genre = get_genre.concat(result.genres);\n    console.log(get_genre);\n    url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n    data = await fetch (url);\n    result = await data.json();\n    setCredits(result.cast);\n    \n  }\n\n  useEffect(() => {\n    getGenre();\n  }, [])\n  if (movieList === null) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n  return (\n    <div>\n      {/* TOP NAVIGATION BAR */}\n      <Navbar className=\"navbar-color\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"#home\">CineFile</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">     \n\n            <Nav.Link href=\"#toprated\" onClick={() => getTopRated()}>Top Rated</Nav.Link>    \n\n            <NavDropdown title=\"Genres\" id=\"basic-nav-dropdown\">\n              {genre.map((item) => {\n                return(\n                <NavDropdown.Item key={item.id} onClick={() => sortMovieGenre(item.id)}>{item.name}</NavDropdown.Item>\n                );\n              })}\n            </NavDropdown>\n          \n          </Nav>\n\n          <Form inline>\n            <FormControl id=\"keyword\" onChange={field => {searchContent = field.target.value;}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"dark\" onClick={() => getKeyword(searchContent)}>Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar> \n\n      <form className=\"form\">\n        <InputRange\n          draggableTrack\n          step={1}\n          maxValue={10}\n          minValue={1}\n          value={rating}\n          onChange={value => setRating(value)}\n          onChangeComplete={() => filterMovieRating(rating)} className=\"input-range\"/>\n      </form>\n\n      <Container>\n        <MovieList movieList = {movieList} genreList = {genre} Search = {startSearch} Modal={openModal}/>        \n        <ReactModal isOpen={modalOpen} ariaHideApp={false} onAfterOpen={() => getMovieInfo(movieId)} closeTimeoutMS={1000}>\n          <PlayTrailer close={closeModal} details={details} review={reviews} credits={getCredits} genre = {get_genre} actor = {actors} SearchResults = {SearchResult}></PlayTrailer>\n        </ReactModal>\n      </Container>\n      \n      {/* <Container className=\"seemore\">\n        <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page-1)}>Previous</Button>\n        <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page+1)}>Next</Button>\n      </Container> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}