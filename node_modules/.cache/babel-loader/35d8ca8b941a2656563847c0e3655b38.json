{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/MovieList.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\nlibrary.add(faStar);\nexport default function MovieList(props) {\n  //console.log(JSON.stringify(props));\n  console.log(props.movieList);\n  let content = [];\n  let temp = [];\n\n  function formatMovie() {\n    props.movieList.forEach((item, i) => {\n      temp.push(item);\n\n      if ((i + 1) % 3 === 0) {\n        content.push(temp);\n        temp = [];\n      }\n    });\n\n    if (!(temp === [])) {\n      content.push(temp);\n    }\n  }\n\n  formatMovie();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, content.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      className: \"m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, item.map(movie => {\n      let genreMovie = \"\";\n\n      if (props) {\n        let genreMovie = movie.genre_ids;\n      } else {\n        let genreMovie = movie.genre_id;\n      }\n\n      let genreTotal = []; //console.log(genreMovie);\n\n      genreTotal = props.genreList.filter(x => genreMovie.includes(x.id));\n\n      if (genreTotal.length === 0) {\n        genreTotal.push({\n          name: \"Unidentified :(\"\n        });\n      } //console.log(movie);\n\n\n      let description = movie.overview.split(\" \").slice(0, 15); //console.log(description);\n      //console.log(genreTotal);\n\n      return /*#__PURE__*/React.createElement(Col, {\n        className: \"d-flex\",\n        key: movie.id,\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"flex-fill\",\n        bg: \"light\",\n        text: \"dark\",\n        border: \"dark\",\n        style: {\n          width: '18rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: `https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }\n      }, movie.original_title), /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: \"bottom\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"text-align\": \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 85\n        }\n      }), movie.vote_average), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 61\n        }\n      }, movie.release_date.split(\"-\")[0]))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Card.Link, {\n        href: \"#\",\n        onClick: () => props.Modal(movie.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 57\n        }\n      }, \"Get Movie Information\"))))));\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/MovieList.js"],"names":["React","FontAwesomeIcon","faStar","library","Card","Container","Row","Col","ListGroup","add","MovieList","props","console","log","movieList","content","temp","formatMovie","forEach","item","i","push","map","index","movie","genreMovie","genre_ids","genre_id","genreTotal","genreList","filter","x","includes","id","length","name","description","overview","split","slice","width","poster_path","original_title","float","vote_average","release_date","Modal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\n\nlibrary.add(faStar);\n\nexport default function MovieList(props) {\n    //console.log(JSON.stringify(props));\n    console.log(props.movieList);\n    let content = [];\n    let temp = [];\n    function formatMovie() {\n        props.movieList.forEach((item, i) => {\n            temp.push(item);\n            if ((i+1) % 3 === 0) {\n                content.push(temp);\n                temp = [];\n            }\n        })\n        if (!(temp === [])) {\n            content.push(temp);\n        }\n    }\n\n    formatMovie();\n    return (\n        <div>\n            <Container fluid=\"md\">\n                {content.map((item, index) => {\n                    return (\n                        <Row key={index} className=\"m-5\">\n                            {item.map(movie => {\n                                let genreMovie = \"\";\n                                if (props){\n                                    let genreMovie = movie.genre_ids;\n                                }\n                                else{\n                                    let genreMovie = movie.genre_id;\n                                }\n                                let genreTotal = [];\n                                //console.log(genreMovie);\n                                genreTotal = props.genreList.filter((x) => genreMovie.includes(x.id))\n                                if (genreTotal.length === 0) {\n                                    genreTotal.push({name: \"Unidentified :(\"});\n                                }\n                                //console.log(movie);\n                                let description = movie.overview.split(\" \").slice(0, 15);\n                                //console.log(description);\n                                //console.log(genreTotal);\n                                return (\n                                    <Col className=\"d-flex\" key={movie.id} sm=\"4\">\n                                        <Card className=\"flex-fill\" bg=\"light\" text=\"dark\" border=\"dark\" style={{ width: '18rem' }}>\n                                            <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`} />\n                                            <Card.Body>\n                                                <Card.Title>{movie.original_title}</Card.Title>\n                                                <ListGroup variant=\"flush\">\n  \n                                                    <ListGroup.Item>\n                                                        <span style={{float: \"bottom\"}}>\n                                                            <span text-align=\"left\"><FontAwesomeIcon icon=\"star\"/>{movie.vote_average}</span>\n                                                            <span style={{float: \"right\"}}>{movie.release_date.split(\"-\")[0]}</span>\n                                                        </span>\n                                                    </ListGroup.Item>                       \n                                                    <ListGroup.Item>\n                                                        <Card.Link href=\"#\" onClick={() => props.Modal(movie.id)}>Get Movie Information</Card.Link>                                                        \n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    )\n                })}\n            </Container>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}