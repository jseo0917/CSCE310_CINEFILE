{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/PlayTrailer.js\";\nimport React from 'react';\nimport YouTube from '@u-wave/react-youtube';\nimport './PlayTrailer.css';\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport { render } from '@testing-library/react';\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react'; //w: 960, h:540\n\nexport default function PlayTrailer(props) {\n  //console.log(JSON.stringify(props.release));\n  // const [data, setData] = useState([]);\n  // var actor_list = [];\n  // fetch(props.actor)\n  //   .then(resp => resp.json())\n  //   .then(data => data.map((item)=> {            \n  //         //return (<span>{item}</span>)\n  //         //console.log(item.id)\n  //         setData(item);\n  //   }));\n  // console.log(data);\n  // fetch('http://localhost:8080/genres')\n  //         .then(response => response.json())\n  //         .then(data => console.log(data));\n  // store the data into our books variable\n  //setMovies(data) ;\n  // fetch(`http//localhost:8080/genres`).then(res => res.json())\n  // .then((result) => {\n  // });\n  // fetch(\"http://localhost:8080/genres\")\n  //     .then(resp => resp.json())\n  //     .then(data => console.log(data));\n  // const [data, setData] = useState([]);\n  // const apiGet = () => {\n  //     fetch(\"http://localhost:8080/genres\")\n  //     .then((response)=>response.json())\n  //     .then((json) => {\n  //         console.log(json);\n  //         setData(json);            \n  //     });\n  // };\n  // return(\n  //     <div>\n  //         {JSON.stringify}\n  //     </div>\n  // )\n  //document.write(<span>{props.release}</span>);\n  //console.log(JSON.stringify(props.release.release_dates));\n  // var actors = [];\n  // if (props.credits){\n  //             console.log(props.credits);\n  //             {props.credits.map((item) => {\n  //                  //return (<div>{item.name}</div>)\n  //                 //console.log(item.name)\n  //                 actors = actors.concat(item.name);\n  //             })}                          \n  //             console.log(actors)\n  //             if(actors.length === 0){\n  //                 actors = actors.concat(\"N/A\");\n  //             }\n  // }\n  // var original_lg = \"N/A\"; \n  // var genre_list = [];\n  // if (props.genre){        \n  //     {props.genre.map((item) => {\n  //        genre_list = genre_list.concat(item.name);\n  //    })}           \n  // }\n  var original_lg = \"N/A\";\n  var actor_lists = [];\n\n  if (props.actor) {\n    {\n      props.actor.map(item => {\n        actor_lists = actor_lists.concat(item.name);\n      });\n    }\n  }\n\n  var title = \"\";\n  var vt_avg = \"\";\n  var release_date = \"\";\n  var over_view = \"\";\n  var language = \"\";\n  var genre = [];\n\n  if (props.SearchResults) {\n    {\n      props.SearchResults.map(item => {\n        title = item.title;\n        vt_avg = item.vote_average;\n        var over_view = item.release_date;\n        var language = item.original_language;\n        var genre = item.genre_id;\n      });\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // <span>{props.credits}</span>        \n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"mb-2\",\n      style: {\n        display: \"block\"\n      },\n      onClick: () => props.close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \" Movie Information \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"actors: \"), actor_lists.map(item => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 26\n        }\n      }, `${item}, `);\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }\n    }, \"Title: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }\n    }, \"Language: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }\n    }, language), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    }, \"Release Date: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 14\n      }\n    }, release_date), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }\n    }, \"Vote Average: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }\n    }, vote_average), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 14\n      }\n    }, \"Overview: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }\n    }, overview))\n  );\n}","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/PlayTrailer.js"],"names":["React","YouTube","Card","Container","Row","Col","ListGroup","render","axios","useEffect","useState","PlayTrailer","props","original_lg","actor_lists","actor","map","item","concat","name","title","vt_avg","release_date","over_view","language","genre","SearchResults","vote_average","original_language","genre_id","display","close","overview"],"mappings":"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","sourcesContent":["import React from 'react'\nimport YouTube from '@u-wave/react-youtube';\nimport './PlayTrailer.css';\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport { render } from '@testing-library/react';\nimport axios from \"axios\"\nimport { useEffect, useState } from 'react';\n//w: 960, h:540\n\nexport default function PlayTrailer(props) {\n    //console.log(JSON.stringify(props.release));\n    // const [data, setData] = useState([]);\n    // var actor_list = [];\n    // fetch(props.actor)\n    //   .then(resp => resp.json())\n    //   .then(data => data.map((item)=> {            \n    //         //return (<span>{item}</span>)\n    //         //console.log(item.id)\n    //         setData(item);\n    //   }));\n    // console.log(data);\n\n    // fetch('http://localhost:8080/genres')\n    //         .then(response => response.json())\n    //         .then(data => console.log(data));\n    // store the data into our books variable\n    //setMovies(data) ;\n\n    // fetch(`http//localhost:8080/genres`).then(res => res.json())\n    // .then((result) => {\n\n    // });\n  \n    // fetch(\"http://localhost:8080/genres\")\n    //     .then(resp => resp.json())\n    //     .then(data => console.log(data));\n    // const [data, setData] = useState([]);\n\n    // const apiGet = () => {\n    //     fetch(\"http://localhost:8080/genres\")\n    //     .then((response)=>response.json())\n    //     .then((json) => {\n    //         console.log(json);\n    //         setData(json);            \n    //     });\n    // };\n\n    // return(\n    //     <div>\n    //         {JSON.stringify}\n    //     </div>\n    // )\n\n    //document.write(<span>{props.release}</span>);\n    //console.log(JSON.stringify(props.release.release_dates));\n\n\n\n    \n    // var actors = [];\n    // if (props.credits){\n    //             console.log(props.credits);\n    //             {props.credits.map((item) => {\n    //                  //return (<div>{item.name}</div>)\n    //                 //console.log(item.name)\n    //                 actors = actors.concat(item.name);\n    //             })}                          \n    //             console.log(actors)\n    //             if(actors.length === 0){\n    //                 actors = actors.concat(\"N/A\");\n    //             }\n    // }\n\n    // var original_lg = \"N/A\"; \n    // var genre_list = [];\n    // if (props.genre){        \n    //     {props.genre.map((item) => {\n    //        genre_list = genre_list.concat(item.name);\n    //    })}           \n\n    // }\n\n    var original_lg = \"N/A\"; \n    var actor_lists = [];\n    \n    if (props.actor){        \n        {props.actor.map((item) => {\n            actor_lists = actor_lists.concat(item.name);\n       })}           \n    }\n\n    var title = \"\";\n    var vt_avg = \"\";\n    var release_date = \"\";\n    var over_view = \"\";\n    var language = \"\";\n    var genre = [];\n\n    if(props.SearchResults){\n        {props.SearchResults.map((item) => {\n            title = item.title;\n            vt_avg = item.vote_average;\n            var over_view = item.release_date;\n            var language = item.original_language;\n            var genre = item.genre_id;\n       })}      \n    }\n    \n    \n\n    return (\n        // <span>{props.credits}</span>        \n        <div>            \n            <button className=\"mb-2\" style={{display: \"block\"}} onClick={() => props.close()}>Close</button>\n            <h3> Movie Information </h3>\n            <h4>actors: </h4>            \n             {actor_lists.map((item) => {                 \n                 return (<p style={{display : 'inline'}}>\n                    {`${item}, `}\n                 </p>);\n             })}\n             <h4>Title: </h4>\n             <p>{title}</p>\n             <h4>Language: </h4>\n             <p>{language}</p>\n             <h4>Release Date: </h4>\n             <p>{release_date}</p>\n             <h4>Vote Average: </h4>\n             <p>{vote_average}</p>\n             <h4>Overview: </h4>\n             <p>{overview}</p>\n\n            {/* <h4>Title: </h4>\n            <p>{`${props.details[0]}`}</p>\n            <h4>Run Time:</h4>\n            <p>{`${props.details[1]}`} minutes</p>\n            <h4>Language: </h4>\n            <p>{`${props.details[2]}`}</p>\n            <h4>Overview: </h4>\n            <p>{`${props.details[3]}`}</p>\n            <h4>Release Date: </h4>\n            <p>{`${props.details[4]}`}</p>\n            <h4>Poster Path: </h4>\n            <p>{`${props.details[5]}`}</p>\n            <h4>Vote Average: </h4>\n            <p>{`${props.details[6]}`}</p>\n            <h4>Genres: </h4>\n            {genre_list.map((item) => {                 \n                 return (<p style={{display : 'inline'}}>\n                    {`${item}, `}\n                 </p>);\n             })} \n            <h4>actors: </h4>            \n             {actors.map((item) => {                 \n                 return (<p style={{display : 'inline'}}>\n                    {`${item}, `}\n                 </p>);\n             })}  */}\n             {/* return props.credits() */}\n        </div>\n    )\n        \n}\n"]},"metadata":{},"sourceType":"module"}