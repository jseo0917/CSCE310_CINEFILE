{"ast":null,"code":"var _jsxFileName = \"/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/PlayTrailer.js\";\nimport React from 'react';\nimport YouTube from '@u-wave/react-youtube';\nimport './PlayTrailer.css';\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport { render } from '@testing-library/react';\nimport axios from \"axios\"; //w: 960, h:540\n\nexport default function PlayTrailer(props) {\n  //console.log(JSON.stringify(props.release));\n  // fetch('http://localhost:8080/genres')\n  //         .then(response => response.json())\n  //         .then(data => console.log(data));\n  // store the data into our books variable\n  //setMovies(data) ;\n  // fetch(`http//localhost:8080/genres`).then(res => res.json())\n  // .then((result) => {\n  // });\n  // fetch(\"http://localhost:8080/genres\")\n  //     .then(resp => resp.json())\n  //     .then(data => console.log(data));\n  const fetchData = () => {\n    return fetch(`http://localhost:8080/genres`).then(res => res.json()).then(json => console.log(json));\n  }; //document.write(<span>{props.release}</span>);\n  //console.log(JSON.stringify(props.release.release_dates));\n\n\n  var actors = [];\n\n  if (props.credits) {\n    console.log(props.credits);\n    {\n      props.credits.map(item => {\n        //return (<div>{item.name}</div>)\n        //console.log(item.name)\n        actors = actors.concat(item.name);\n      });\n    }\n    console.log(actors);\n\n    if (actors.length === 0) {\n      actors = actors.concat(\"N/A\");\n    }\n  }\n\n  var original_lg = \"N/A\";\n  var genre_list = [];\n\n  if (props.genre) {\n    {\n      props.genre.map(item => {\n        genre_list = genre_list.concat(item.name);\n      });\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // <span>{props.credits}</span>        \n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"mb-2\",\n      style: {\n        display: \"block\"\n      },\n      onClick: () => props.close(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \" Movie Information \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Title: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, `${props.details[0]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Run Time:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, `${props.details[1]}`, \" minutes\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Language: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, `${props.details[2]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Overview: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, `${props.details[3]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Release Date: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, `${props.details[4]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Poster Path: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, `${props.details[5]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Vote Average: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, `${props.details[6]}`), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Genres: \"), genre_list.map(item => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 26\n        }\n      }, `${item}, `);\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"actors: \"), actors.map(item => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 26\n        }\n      }, `${item}, `);\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/components/PlayTrailer.js"],"names":["React","YouTube","Card","Container","Row","Col","ListGroup","render","axios","PlayTrailer","props","fetchData","fetch","then","res","json","console","log","actors","credits","map","item","concat","name","length","original_lg","genre_list","genre","display","close","details"],"mappings":"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","sourcesContent":["import React from 'react'\nimport YouTube from '@u-wave/react-youtube';\nimport './PlayTrailer.css';\nimport { Card, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport { render } from '@testing-library/react';\nimport axios from \"axios\"\n//w: 960, h:540\n\nexport default function PlayTrailer(props) {\n    //console.log(JSON.stringify(props.release));\n\n\n    // fetch('http://localhost:8080/genres')\n    //         .then(response => response.json())\n    //         .then(data => console.log(data));\n    // store the data into our books variable\n    //setMovies(data) ;\n\n    // fetch(`http//localhost:8080/genres`).then(res => res.json())\n    // .then((result) => {\n\n    // });\n  \n    // fetch(\"http://localhost:8080/genres\")\n    //     .then(resp => resp.json())\n    //     .then(data => console.log(data));\n    const fetchData = () => {\n        return fetch(`http://localhost:8080/genres`).then((res) => res.json())  \n        .then((json) => console.log(json));\n    }\n    //document.write(<span>{props.release}</span>);\n    //console.log(JSON.stringify(props.release.release_dates));\n    var actors = [];\n    if (props.credits){\n                console.log(props.credits);\n                {props.credits.map((item) => {\n                     //return (<div>{item.name}</div>)\n                    //console.log(item.name)\n                    actors = actors.concat(item.name);\n                })}                          \n                console.log(actors)\n                if(actors.length === 0){\n                    actors = actors.concat(\"N/A\");\n                }\n    }\n\n    var original_lg = \"N/A\"; \n    var genre_list = [];\n    if (props.genre){        \n        {props.genre.map((item) => {\n           genre_list = genre_list.concat(item.name);\n       })}           \n\n    }\n\n    return (\n        // <span>{props.credits}</span>        \n        <div>            \n            <button className=\"mb-2\" style={{display: \"block\"}} onClick={() => props.close()}>Close</button>\n            <h3> Movie Information </h3>\n            <h4>Title: </h4>\n            <p>{`${props.details[0]}`}</p>\n            <h4>Run Time:</h4>\n            <p>{`${props.details[1]}`} minutes</p>\n            <h4>Language: </h4>\n            <p>{`${props.details[2]}`}</p>\n            <h4>Overview: </h4>\n            <p>{`${props.details[3]}`}</p>\n            <h4>Release Date: </h4>\n            <p>{`${props.details[4]}`}</p>\n            <h4>Poster Path: </h4>\n            <p>{`${props.details[5]}`}</p>\n            <h4>Vote Average: </h4>\n            <p>{`${props.details[6]}`}</p>\n            <h4>Genres: </h4>\n            {genre_list.map((item) => {                 \n                 return (<p style={{display : 'inline'}}>\n                    {`${item}, `}\n                 </p>);\n             })} \n            <h4>actors: </h4>            \n             {actors.map((item) => {                 \n                 return (<p style={{display : 'inline'}}>\n                    {`${item}, `}\n                 </p>);\n             })} \n             {/* return props.credits() */}\n        </div>\n    )\n        \n}\n"]},"metadata":{},"sourceType":"module"}