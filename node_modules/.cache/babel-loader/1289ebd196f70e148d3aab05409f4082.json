{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client';\nimport axios from \"axios\";\nimport useFetch from \"react-fetch-hook\";\nlibrary.add(fab);\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nvar details = [];\nvar get_genre = [];\n\nfunction App() {// let [movieList, setMovieList] = useState(null);\n  // let [nowPlaying, setNowPlaying] = useState(false);\n  // let [nowRated, setNowRated] = useState(false);\n  // let [nowKeyword, setNowKeyword] = useState(false);\n  // let [page, setPage] = useState(1);\n  // let [keyword, setKeyword] = useState('');\n  // let [genre, setGenre] = useState(null);\n  // let [modalOpen, setOpen] = useState(false);\n  // let [movieId, setMovieId] = useState(null);\n  // let [videoId, setVideo] = useState(null);\n  // let [rating, setRating] = useState(1);\n  // let [currentList, setCurrent] = useState(null);\n  // let [reviews, setReview] = useState(null);\n  // let [getCredits, setCredits] = useState(null);\n  // let [release_dates, setRelease] = useState(null);\n  // let searchContent = '';\n  // const getGenre = async() => {\n  //   let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   //console.log(\"Genres\", result);\n  //   setGenre(result.genres);\n  //   getNowPlaying();\n  // }\n  // const getNowPlaying = async() => {\n  //   let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   console.log(\"Movie\", result);\n  //   setMovieList([...result.results]);\n  //   setCurrent([...result.results]);\n  //   setNowPlaying(true);\n  //   setNowKeyword(false);\n  //   setNowRated(false);\n  // }\n  // const getKeyword = async(keyword) => {\n  //   let url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=1&include_adult=false`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setMovieList([...result.results]);\n  //   document.getElementById(\"keyword\").value = null;\n  //   setNowPlaying(false);\n  //   setNowKeyword(true);\n  //   setNowRated(false);\n  //   setKeyword(keyword);\n  //   setCurrent([...result.results]);\n  // }\n  // function sortMovieRating(x) {\n  //   if (!(movieList === null)) {\n  //     movieList.sort(function(a, b) {\n  //       let i = a.vote_average;\n  //       let j = b.vote_average;\n  //       console.log(i,j);\n  //       return (i-j)*x;\n  //     })\n  //     setMovieList([...movieList]);\n  //     //console.log(\"Sorted\", movieList)\n  //   }\n  // }\n  // function sortMoviePopular(x) {\n  //   if (!(movieList === null)) {\n  //     movieList.sort(function(a, b) {\n  //       let i = a.popularity;\n  //       let j = b.popularity;\n  //       console.log(i,j);\n  //       return (i-j)*x;\n  //     })\n  //     setMovieList([...movieList]);\n  //     //console.log(\"Sorted\", movieList)\n  //   }\n  // }\n  // function filterMovieRating(x) {\n  //   console.log(rating);\n  //   console.log(currentList);\n  //   if (currentList.length>0) {\n  //     movieList = currentList;\n  //     let temp = movieList.filter((item) => {\n  //       let y = (item.vote_average>=x);\n  //       console.log(y);\n  //       return (y);\n  //     })\n  //     setMovieList(temp);\n  //   }\n  // }\n  // const getTopRated = async() => {\n  //   let url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setMovieList([...result.results]);\n  //   //console.log(\"Movie\", result.results);\n  //   setNowPlaying(false);\n  //   setNowKeyword(false);\n  //   setNowRated(true);\n  //   setCurrent([...result.results]);\n  // }\n  // let getSeeMore = async(page) => {\n  //   //console.log(page);\n  //   if (page === 0) return;\n  //   let url;\n  //   if (nowPlaying) {\n  //     url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${page}`;\n  //   } \n  //   else if (nowKeyword) {\n  //     url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=${page}&include_adult=false`;\n  //   }\n  //   else if (nowRated) {\n  //     url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${page}`;\n  //   }\n  //   try {\n  //     let data = await fetch (url);\n  //     let result = await data.json();\n  //     setMovieList([...result.results]);\n  //     setPage(page);\n  //     console.log(`Now Playing ${nowPlaying}, Now Rated ${nowRated}, Now Keyword ${nowKeyword}`)\n  //     console.log(url);\n  //     setCurrent([...result.results]);\n  //   } catch (error) {\n  //     alert(\"Not found!\")\n  //   }\n  // }\n  // let sortMovieGenre = (currentGenre) => {\n  //   try {\n  //     let temp = movieList.filter((movie) => {\n  //       let x = movie.genre_ids.includes(currentGenre);\n  //       console.log(x);\n  //     return x;\n  //     })\n  //     if (temp.length === 0) return;\n  //     setMovieList(temp);\n  //   } catch (error) {\n  //     alert(error);\n  //   }\n  // }\n  // let closeModal = () => {\n  //   setOpen(false);\n  // }\n  // let openModal = (id) => {\n  //   setOpen(true);\n  //   setMovieId(id);\n  // }\n  // // const {data2} = useFetch(`http//localhost:8080/genres`);\n  // // console.log(data2);\n  // // var data2;\n  // // const fetchData = () => {\n  // //     return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data)).then(data2=>setData(data2));\n  // // }\n  // // Console.log(data2);\n  // let getMovieInfo = async(id) => {\n  //   // const fetchData = () => {\n  //   //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n  //   // }\n  //   let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setReview(result.results);\n  //   url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n  //   data = await fetch (url);\n  //   result = await data.json();\n  //   //setVideo(result.title);\n  //   //console.log(result.title);\n  //   //580489\n  //   console.log(id);\n  //   let result_ = new Promise((resolve, reject) => {\n  //     let request = new XMLHttpRequest();\n  //       request.open(\"GET\", `http//localhost:8080/genres`);\n  //       request.onreadystatechange = () => {\n  //         let raw = request.responseText;          \n  //         let objectified = JSON.parse(raw);\n  //         resolve(objectified);\n  //         console.log(resolve(objectified));\n  //     }\n  //     request.send();\n  //   })\n  // //  const fetchData = () => {\n  // //     return fetch(`http//localhost:8080/genres`).then((res) => res.json())  \n  // //     .then((json) => console.log(json));\n  // //  }\n  //   // const fetchData = () => {\n  //   //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n  //   // }\n  //   //console.log(fetchData);\n  //   details = details.concat(result.title);\n  //   details = details.concat(result.runtime);\n  //   details = details.concat(result.original_language);\n  //   details = details.concat(result.overview);\n  //   details = details.concat(result.release_date);\n  //   details = details.concat(result.poster_path);\n  //   details = details.concat(result.vote_average);\n  //   get_genre = get_genre.concat(result.genres);\n  //   console.log(get_genre);\n  //   url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n  //   data = await fetch (url);\n  //   result = await data.json();\n  //   setCredits(result.cast);\n  // }\n  // useEffect(() => {\n  //   getGenre();\n  // }, [])\n  // if (movieList === null) {\n  //   return (\n  //     <div>\n  //       Loading...\n  //     </div>\n  //   )\n  // }\n  // return (\n  //   <div>\n  //     {/* TOP NAVIGATION BAR */}\n  //     <Navbar className=\"navbar-color\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n  //       <Navbar.Brand href=\"#home\">CineFile</Navbar.Brand>\n  //       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  //       <Navbar.Collapse id=\"basic-navbar-nav\">\n  //         <Nav className=\"mr-auto\">     \n  //           <Nav.Link href=\"#toprated\" onClick={() => getTopRated()}>Top Rated</Nav.Link>    \n  //           <NavDropdown title=\"Genres\" id=\"basic-nav-dropdown\">\n  //             {genre.map((item) => {\n  //               return(\n  //               <NavDropdown.Item key={item.id} onClick={() => sortMovieGenre(item.id)}>{item.name}</NavDropdown.Item>\n  //               );\n  //             })}\n  //           </NavDropdown>\n  //         </Nav>\n  //         <Form inline>\n  //           <FormControl id=\"keyword\" onChange={field => {searchContent = field.target.value;}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n  //           <Button variant=\"dark\" onClick={() => getKeyword(searchContent)}>Search</Button>\n  //         </Form>\n  //       </Navbar.Collapse>\n  //     </Navbar> \n  //     <form className=\"form\">\n  //       <InputRange\n  //         draggableTrack\n  //         step={1}\n  //         maxValue={10}\n  //         minValue={1}\n  //         value={rating}\n  //         onChange={value => setRating(value)}\n  //         onChangeComplete={() => filterMovieRating(rating)} className=\"input-range\"/>\n  //     </form>\n  //     <Container>\n  //       <MovieList movieList = {movieList} genreList = {genre} Modal={openModal}/>\n  //       <ReactModal isOpen={modalOpen} ariaHideApp={false} onAfterOpen={() => getMovieInfo(movieId)} closeTimeoutMS={1000}>\n  //         <PlayTrailer close={closeModal} details={details} review={reviews} credits={getCredits} genre = {get_genre}></PlayTrailer>\n  //       </ReactModal>\n  //     </Container>\n  //     <Container className=\"seemore\">\n  //       <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page-1)}>Previous</Button>\n  //       <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page+1)}>Next</Button>\n  //     </Container>\n  //   </div>\n  // );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/junghoonseo/Desktop/CSCE 310/GroupProject/Git/CSCE310CINEFILE/src/App.js"],"names":["React","useEffect","useState","library","fab","MovieList","PlayTrailer","ReactModal","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","InputRange","Client","axios","useFetch","add","apiKey","details","get_genre","App"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,GAAT,QAAoB,oCAApB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,qCAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,WAAtB,EAAmCC,IAAnC,EAAyCC,WAAzC,EAAsDC,MAAtD,EAA8DC,SAA9D,QAA+E,iBAA/E;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACAf,OAAO,CAACgB,GAAR,CAAYf,GAAZ;AAEA,MAAMgB,MAAM,GAAG,kCAAf;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,SAAS,GAAG,EAAhB;;AACA,SAASC,GAAT,GAAe,CAEbeAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieList from './components/MovieList';\nimport PlayTrailer from './components/PlayTrailer';\nimport \"react-input-range/lib/css/index.css\";\nimport ReactModal from 'react-modal';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\nimport './App.css';\nimport InputRange from 'react-input-range';\nimport Client from './Client';\nimport axios from \"axios\"\nimport useFetch from \"react-fetch-hook\"\nlibrary.add(fab);\n\nconst apiKey = \"165b688bd880d774d14d9bcbaadc7666\";\nvar details = [];\nvar get_genre = [];\nfunction App() {\n  \n  // let [movieList, setMovieList] = useState(null);\n  // let [nowPlaying, setNowPlaying] = useState(false);\n  // let [nowRated, setNowRated] = useState(false);\n  // let [nowKeyword, setNowKeyword] = useState(false);\n  // let [page, setPage] = useState(1);\n  // let [keyword, setKeyword] = useState('');\n  // let [genre, setGenre] = useState(null);\n  // let [modalOpen, setOpen] = useState(false);\n  // let [movieId, setMovieId] = useState(null);\n  // let [videoId, setVideo] = useState(null);\n  // let [rating, setRating] = useState(1);\n  // let [currentList, setCurrent] = useState(null);\n  // let [reviews, setReview] = useState(null);\n  // let [getCredits, setCredits] = useState(null);\n  // let [release_dates, setRelease] = useState(null);\n  // let searchContent = '';\n\n  // const getGenre = async() => {\n  //   let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   //console.log(\"Genres\", result);\n  //   setGenre(result.genres);\n  //   getNowPlaying();\n  // }\n  // const getNowPlaying = async() => {\n  //   let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=1`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   console.log(\"Movie\", result);\n  //   setMovieList([...result.results]);\n  //   setCurrent([...result.results]);\n  //   setNowPlaying(true);\n  //   setNowKeyword(false);\n  //   setNowRated(false);\n  // }\n  // const getKeyword = async(keyword) => {\n  //   let url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=1&include_adult=false`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setMovieList([...result.results]);\n  //   document.getElementById(\"keyword\").value = null;\n  //   setNowPlaying(false);\n  //   setNowKeyword(true);\n  //   setNowRated(false);\n  //   setKeyword(keyword);\n  //   setCurrent([...result.results]);\n  // }\n\n  // function sortMovieRating(x) {\n  //   if (!(movieList === null)) {\n  //     movieList.sort(function(a, b) {\n  //       let i = a.vote_average;\n  //       let j = b.vote_average;\n  //       console.log(i,j);\n  //       return (i-j)*x;\n  //     })\n  //     setMovieList([...movieList]);\n  //     //console.log(\"Sorted\", movieList)\n  //   }\n  // }\n\n  // function sortMoviePopular(x) {\n  //   if (!(movieList === null)) {\n  //     movieList.sort(function(a, b) {\n  //       let i = a.popularity;\n  //       let j = b.popularity;\n  //       console.log(i,j);\n  //       return (i-j)*x;\n  //     })\n  //     setMovieList([...movieList]);\n  //     //console.log(\"Sorted\", movieList)\n  //   }\n  // }\n\n  // function filterMovieRating(x) {\n  //   console.log(rating);\n  //   console.log(currentList);\n  //   if (currentList.length>0) {\n  //     movieList = currentList;\n  //     let temp = movieList.filter((item) => {\n  //       let y = (item.vote_average>=x);\n  //       console.log(y);\n  //       return (y);\n  //     })\n  //     setMovieList(temp);\n  //   }\n  // }\n\n  // const getTopRated = async() => {\n  //   let url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setMovieList([...result.results]);\n  //   //console.log(\"Movie\", result.results);\n  //   setNowPlaying(false);\n  //   setNowKeyword(false);\n  //   setNowRated(true);\n  //   setCurrent([...result.results]);\n  // }\n\n  // let getSeeMore = async(page) => {\n  //   //console.log(page);\n  //   if (page === 0) return;\n  //   let url;\n  //   if (nowPlaying) {\n  //     url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${page}`;\n  //   } \n  //   else if (nowKeyword) {\n  //     url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${keyword}&page=${page}&include_adult=false`;\n  //   }\n  //   else if (nowRated) {\n  //     url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${page}`;\n  //   }\n  //   try {\n  //     let data = await fetch (url);\n  //     let result = await data.json();\n  //     setMovieList([...result.results]);\n  //     setPage(page);\n  //     console.log(`Now Playing ${nowPlaying}, Now Rated ${nowRated}, Now Keyword ${nowKeyword}`)\n  //     console.log(url);\n  //     setCurrent([...result.results]);\n  //   } catch (error) {\n  //     alert(\"Not found!\")\n  //   }\n  // }\n\n  // let sortMovieGenre = (currentGenre) => {\n  //   try {\n  //     let temp = movieList.filter((movie) => {\n  //       let x = movie.genre_ids.includes(currentGenre);\n  //       console.log(x);\n  //     return x;\n  //     })\n  //     if (temp.length === 0) return;\n  //     setMovieList(temp);\n  //   } catch (error) {\n  //     alert(error);\n  //   }\n    \n  // }\n\n  // let closeModal = () => {\n  //   setOpen(false);\n  // }\n\n  // let openModal = (id) => {\n  //   setOpen(true);\n  //   setMovieId(id);\n  // }\n  \n  // // const {data2} = useFetch(`http//localhost:8080/genres`);\n  // // console.log(data2);\n  // // var data2;\n  // // const fetchData = () => {\n  // //     return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data)).then(data2=>setData(data2));\n  // // }\n  // // Console.log(data2);\n\n\n  // let getMovieInfo = async(id) => {\n  //   // const fetchData = () => {\n  //   //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n  //   // }\n\n\n  //   let url = `https://api.themoviedb.org/3/movie/${id}}/reviews?api_key=${apiKey}&language=en-US`;\n  //   let data = await fetch (url);\n  //   let result = await data.json();\n  //   setReview(result.results);\n    \n  //   url = `https://api.themoviedb.org/3/movie/${id}}?api_key=${apiKey}&language=en-US`;\n  //   data = await fetch (url);\n  //   result = await data.json();\n  //   //setVideo(result.title);\n  //   //console.log(result.title);\n  //   //580489\n  //   console.log(id);\n  //   let result_ = new Promise((resolve, reject) => {\n  //     let request = new XMLHttpRequest();\n  //       request.open(\"GET\", `http//localhost:8080/genres`);\n  //       request.onreadystatechange = () => {\n  //         let raw = request.responseText;          \n  //         let objectified = JSON.parse(raw);\n  //         resolve(objectified);\n  //         console.log(resolve(objectified));\n  //     }\n      \n  //     request.send();\n  //   })\n    \n\n  // //  const fetchData = () => {\n  // //     return fetch(`http//localhost:8080/genres`).then((res) => res.json())  \n  // //     .then((json) => console.log(json));\n  // //  }\n\n  //   // const fetchData = () => {\n  //   //   return axios.get(`http//localhost:8080/genres`).then((response) => console.log(response.data));\n  //   // }\n    \n  //   //console.log(fetchData);\n\n  //   details = details.concat(result.title);\n  //   details = details.concat(result.runtime);\n  //   details = details.concat(result.original_language);\n  //   details = details.concat(result.overview);\n  //   details = details.concat(result.release_date);\n  //   details = details.concat(result.poster_path);\n  //   details = details.concat(result.vote_average);\n  //   get_genre = get_genre.concat(result.genres);\n  //   console.log(get_genre);\n  //   url = `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=${apiKey}&language=en-US`;\n  //   data = await fetch (url);\n  //   result = await data.json();\n  //   setCredits(result.cast);\n    \n  // }\n\n  // useEffect(() => {\n  //   getGenre();\n  // }, [])\n  // if (movieList === null) {\n  //   return (\n  //     <div>\n  //       Loading...\n  //     </div>\n  //   )\n  // }\n  // return (\n    \n  //   <div>\n  //     {/* TOP NAVIGATION BAR */}\n  //     <Navbar className=\"navbar-color\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n  //       <Navbar.Brand href=\"#home\">CineFile</Navbar.Brand>\n  //       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  //       <Navbar.Collapse id=\"basic-navbar-nav\">\n  //         <Nav className=\"mr-auto\">     \n\n  //           <Nav.Link href=\"#toprated\" onClick={() => getTopRated()}>Top Rated</Nav.Link>    \n\n  //           <NavDropdown title=\"Genres\" id=\"basic-nav-dropdown\">\n  //             {genre.map((item) => {\n  //               return(\n  //               <NavDropdown.Item key={item.id} onClick={() => sortMovieGenre(item.id)}>{item.name}</NavDropdown.Item>\n  //               );\n  //             })}\n  //           </NavDropdown>\n          \n  //         </Nav>\n\n  //         <Form inline>\n  //           <FormControl id=\"keyword\" onChange={field => {searchContent = field.target.value;}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n  //           <Button variant=\"dark\" onClick={() => getKeyword(searchContent)}>Search</Button>\n  //         </Form>\n  //       </Navbar.Collapse>\n  //     </Navbar> \n\n  //     <form className=\"form\">\n  //       <InputRange\n  //         draggableTrack\n  //         step={1}\n  //         maxValue={10}\n  //         minValue={1}\n  //         value={rating}\n  //         onChange={value => setRating(value)}\n  //         onChangeComplete={() => filterMovieRating(rating)} className=\"input-range\"/>\n  //     </form>\n\n  //     <Container>\n  //       <MovieList movieList = {movieList} genreList = {genre} Modal={openModal}/>\n  //       <ReactModal isOpen={modalOpen} ariaHideApp={false} onAfterOpen={() => getMovieInfo(movieId)} closeTimeoutMS={1000}>\n  //         <PlayTrailer close={closeModal} details={details} review={reviews} credits={getCredits} genre = {get_genre}></PlayTrailer>\n  //       </ReactModal>\n  //     </Container>\n      \n  //     <Container className=\"seemore\">\n  //       <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page-1)}>Previous</Button>\n  //       <Button variant=\"dark\" className=\"m-3 mb-5\" onClick={() => getSeeMore(page+1)}>Next</Button>\n  //     </Container>\n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}